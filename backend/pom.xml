<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>nl.jvandis</groupId>
        <artifactId>teambalance</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <groupId>nl.jvandis.teambalance</groupId>
    <artifactId>backend</artifactId>
    <name>Team balance - Spring boot backend</name>

    <properties>
        <caffeine.version>v3.1.1</caffeine.version>
<!--        <liquibase.version>4.16.129.1</liquibase.version> &lt;!&ndash; to prevent collisions for JOOQ &ndash;&gt;-->


        <jetty.version>12.0.0.alpha3</jetty.version>
        <postgresql.version>42.5.1</postgresql.version>
        <spring-cloud-gcp-dependencies.version>3.4.1</spring-cloud-gcp-dependencies.version>
        <springdoc-openapi.version>1.6.13</springdoc-openapi.version>
        <testcontainers.version>1.17.3</testcontainers.version>
        <jooq.version>3.17.6</jooq.version> <!-- same as from spring-boot-starter-jooq -->
        <testcontainers.postgresql.version>11.18-bullseye</testcontainers.postgresql.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>spring-cloud-gcp-dependencies</artifactId>
                <version>${spring-cloud-gcp-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>nl.jvandis</groupId>
            <artifactId>shadowed-bung-sdk</artifactId>
            <version>1.19.11.48</version>
        </dependency>
        <dependency>
            <groupId>nl.jvandis</groupId>
            <artifactId>jooq-support</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- Exclude the Tomcat dependency -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>${caffeine.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency> <!-- used to deal with Pages and Sort and such. Not necessary?-->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>spring-cloud-gcp-starter-secretmanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-postgres-extensions</artifactId>
            <version>3.16.13</version>
        </dependency>


        <!-- Swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-kotlin</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-indexer</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>1.17.6</version>
        </dependency>

    </dependencies>
    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
                <configuration>
                    <logging>INFO</logging>
                    <jdbc>
                        <driver>
                            org.testcontainers.jdbc.ContainerDatabaseDriver
                        </driver>
                        <url>
                            jdbc:tc:postgresql:${testcontainers.postgresql.version}://teambalance?TC_INITFUNCTION=nl.jvandis.jooq.support.migrations.LiquibaseSupport::migrate&amp;schema=public&amp;rootPath=${project.basedir}/src/main/resources/db/changelog/&amp;scripts=db.changelog-master.xml&amp;TC_INITSCRIPT=file:${project.basedir}/../docker/postgres/00_init.sql
                        </url>
                        <user>teambalance</user>
                        <password>teambalance</password>
                    </jdbc>
                    <generator>
                        <name>org.jooq.codegen.KotlinGenerator</name>
                        <database>
                            <inputSchema>public</inputSchema>
                            <schemata>
                                <schema>
                                    <inputSchema>public</inputSchema>
                                </schema>
                            </schemata>
                            <forcedTypes combine.children="append">
                                <forcedType>
                                    <userType>nl.jvandis.teambalance.api.event.Place</userType>
                                    <enumConverter>true</enumConverter>
                                    <objectType>COLUMN</objectType>
                                    <includeTypes>home_away</includeTypes>
                                </forcedType>
                                <forcedType>
                                    <userType>nl.jvandis.teambalance.api.attendees.Availability</userType>
                                    <enumConverter>true</enumConverter>
                                    <objectType>COLUMN</objectType>
                                    <includeTypes>availability</includeTypes>
                                </forcedType>

                                <forcedType>
                                    <userType>nl.jvandis.teambalance.api.users.Role</userType>
                                    <enumConverter>true</enumConverter>
                                    <objectType>COLUMN</objectType>
                                    <includeTypes>role</includeTypes>
                                </forcedType>

                            </forcedTypes>
                        </database>
                        <target>
                            <packageName>nl.jvandis.teambalance.data.jooq.schema</packageName>
                        </target>
                    </generator>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
