services:

  backend:
    image: maven:3.9-eclipse-temurin-21
    command: ./mvnw spring-boot:run -Dspring-boot.run.profiles=local -pl app
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
    ports:
      - "8080:8080"
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - .:/usr/src/mymaven:rw
      - $HOME/.m2:/root/.m2
    working_dir: /usr/src/mymaven
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u", "admin:admin", "http://localhost:8080/internal/actuator/health" ]
      interval: 30s
      timeout: 10s
      start_period: 15s
      start_interval: 2s
      retries: 3


  frontend:
    image: teambalance/frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      VITE_SERVER_BACKEND: backend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://frontend:3000"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      start_interval: 1s
      retries: 3

  postgresql:
    image: postgres:16.5-alpine
    ports:
      - "54321:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    command: postgres -c max_connections=20
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "teambalance" ]
      interval: 30s
      start_period: 10s
      start_interval: 1s
      timeout: 5s
      retries: 3

  e2e:
    image: teambalance/e2e
    build:
      context: ./e2e
      dockerfile: Dockerfile
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      VITE_SERVER_BACKEND: backend
      HOST: http://frontend:3000
      PASSWORD: teambalance
    volumes:
      - ./e2e:/usr/src/app
      - /usr/src/app/node_modules
